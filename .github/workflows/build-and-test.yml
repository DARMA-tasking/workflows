name: Build and Test (Template)

# Template workkflow to build and test a project in all available test environments on Github actions
# WIP: This is currently a work in progress (#2: Docker image usage)

on:
  push:
    branches: 
      - 2-implement-common-docker-containers

jobs:
  get-matrix:
    name: Retrieve CI matrix
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CI_REPO: DARMA-tasking/workflows
      CI_BRANCH: 2-implement-common-docker-containers # should be master in the future
    steps:  
      - name: Retrieve CI matrix
        id: get-matrix
        run: |
          wget https://raw.githubusercontent.com/${{ env.CI_REPO }}/refs/heads/${{ env.CI_BRANCH }}/ci/shared/workflows/github-matrix.json
          matrix=$(cat github-matrix.json | jq '.matrix')
          echo "runner=$(echo $matrix)" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.get-matrix.outputs.runner }}

  run:
    name: Run (${{ matrix.runner.environment.label }})
    runs-on: ${{ matrix.runner.runs-on }}
    env:
      CI_REPO: DARMA-tasking/workflows
      CI_BRANCH: 2-implement-common-docker-containers # should be master in the future
    needs: get-matrix
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ fromJson(needs.get-matrix.outputs.matrix ) }}
    steps:
      - name: Display configuration
        run: |
          echo "id=${{ matrix.runner.id }}"
          echo "Environment=${{ matrix.runner.environment.label }}"
          echo "Runner=${{ matrix.runner.runs-on }}"
          echo "Setup Mode=${{ matrix.runner.setup-mode }}"
          if [ "${{ matrix.runner.setup-mode }}" == "docker" ]
          then
            echo "> With Docker Image=${{ matrix.runner.image }}"
          fi

      - name: Set up environment
        run: |
          if [[ "${{ matrix.runner.setup-mode}}" == "runner" ]]
          then
            echo "::group::List installation scripts"
            mkdir -p ~/tmp
            cd ~/tmp
            git clone -b 2-implement-common-docker-containers --no-checkout --depth 1 https://github.com/${{ env.CI_REPO }} workflows
            cd ~/tmp/workflows
            arr=($(git ls-tree -r --name-only refs/heads/${{ env.CI_BRANCH }} | grep -E "ci/shared/scripts/deps/.*\.sh"))
            cd ~/
            rm -rf ~/tmp
            echo "::endgroup::"

            echo "::group::Copy installation scripts"
            mkdir -p /opt/scripts/deps
            pushd /opt/scripts/
            for script in ${arr[@]}
            do
              wget https://raw.githubusercontent.com/${{ env.CI_REPO }}/refs/heads/${{ env.CI_BRANCH }}/$script
            done
            popd
            wget -O setup.sh https://raw.githubusercontent.com/${{ env.CI_REPO }}/refs/heads/${{ env.CI_BRANCH }}/ci/shared/scripts/setup-${{ matrix.runner.environment.id }}.sh
    
            chmod u+x /opt/scripts/setup.sh /opt/scripts/deps/*.sh
            popd
            echo "::endgroup::"

            echo "::group::Setup"
            /opt/scripts/setup.sh
            echo "::endgroup::"
          else
            echo "Docker environment pull. Not implemented."
            exit 1
          fi

      # - name: Build and test
      # TODO: Build an test step.
      # > Option 1: Docker image (Environment Setup="docker") WIP
      # - pull the docker image
      # - build & Test using `docker exec [container] build_and_test.sh` for example or by using an inner build_and_test docker image
      # - (TODO: copy artifacts using a volume)

      # > Option 2: Current runner (Environment Setup="local") (Future for some macos)
      # - setup dependencies here directly
      #   (Here a work needs to be done to determine how to get the dependencies script. It might be shared by the workflows repo and put in matrix)
      # - build & Test using build_and_test.sh

      # - name: Upload artifacts

      # - name: Report test results
      # note: (as in vt-tv or LBAF)

      # - name: Report coverage
